MEMORY 
  {
  ram  : ORIGIN = 0x6000000, l = 1M
    ram2  : ORIGIN = 0x00200000, l = 1M
  }

SECTIONS {

	.stack 0x060fff00 (NOLOAD):
	{
		root/sl.elf (".stack")
         	_stack = . ;
	} > ram	

	.shared 0x6003700 (NOLOAD):
	{
		root/sl.elf (".shared")
		_play = .;
		_hz = _play + 2;
		_col = _hz + 2; /* size 16 */
		_pcm = _col + 16; /* pointer size 4 */		
		_nBurnDrvCount = _pcm + 16;
		_nBurnDrvSelect = _nBurnDrvCount + 4;
		_nBurnSoundRate = _nBurnDrvSelect + 4;
		_nBurnSprites = _nBurnSoundRate + 4;
		_nBurnLinescrollSize = _nBurnSprites + 4;
		_nBurnFunction = _nBurnLinescrollSize + 4;
		_nSoundBufferPos = _nBurnFunction + 4;
		_SclProcess = _nSoundBufferPos + 4;
/*		_SclColRamAlloc256 = _SclProcess + 4;*/ /* size 32 */
/*		_per_buff = _SclProcess + 4;*/ /* pointer size 61 */
/*		_per_data = _per_buff + 64; */ /* pointer size 4 */
/*		_mul_info2 = _per_data + 4; */ /* pointer size 16  ??? */
		___port = _SclProcess + 4; /* pointer size 4 */

		_SPR_SlaveParam = ___port + 16; /* pointer size 4 */
		_SPR_SlaveState = _SPR_SlaveParam + 4; /* pointer size 4 */
		_SPR_SlaveCommand = _SPR_SlaveState + 4; /* pointer size 4 */

		_shared = _SPR_SlaveCommand + 4; /* shared size is 17*4 + 384*4 */
		_shared_end = _shared + 1604; /* 17*4 + 384*4 */

/*		_SclAddrLsTbl = _SclColRamAlloc256 + 32; */ /* size 8 */
/*		_SclBgColMix = . + 112;  size 8 */
/*		_SclBgPriNum = . + 120;  size 6 */
/*		_SclOtherPri = . + 126;  size 16 */
/*		_SclSpPriNum = . + 130;  size 8 */
	} > ram

	.entry 0x6004000  (NOLOAD):
	{
		root/sl.elf (".entry")
	}  > ram

	.text ALIGN(0x10)  (NOLOAD):
	{
		root/sl.elf (".text")
		root/sl.elf (".text.startup")
		root/sl.elf (".rodata*")
		root/sl.elf (".strings")
	} > ram
	
	.rodata ALIGN(0x10)   (NOLOAD):		
	{			
	   root/sl.elf (.rodata*)
	} > ram	
	
	.bss ALIGN(0x10) (NOLOAD):			
	{
		root/sl.elf (".bss")
		root/sl.elf ("COMMON")
	} > ram
 
  .overlaydma ALIGN(0x10) (NOLOAD):
  {
	__bstarto = . ;
	*(.bss)
	*("COMMON")
	. = ALIGN(0x10);
	__bendo = . ;
	_end = .;
  } > ram

         .ovl 0x00200000:
        {
                _ovlstart = .;
		*(.boot)
		*(.clean)
		*(".text")
		*(".strings")
		. = ALIGN(0x10);
		*(.dtors)
		. = ALIGN(0x10);
		
		__rodata_start = .;
		*(.rodata*)
		__rodata_end = .;	
	   
		__dstarto = . ;
		*(.data)
		. = ALIGN(0x10);
		__dendo = . ;

        } > ram2
		
	
}
